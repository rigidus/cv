# -*- mode: org; fill-column: 60; -*-
#+STARTUP: showall indent hidestars
#+OPTIONS: toc:nil H:10 ':t

#+LaTeX_HEADER: \usepackage{fa_orgmode_cv}

#+TITLE: Mikhail Glukhov - Common Lisp Developer

#+ATTR_HTML: :frame void
#+ATTR_LATEX: :environment tabular :align rp{0.85\textwidth}

- A software architect with a solid technical background and
  blockchain experience.
- Experience: 16,5 years
- Male, 38 years, was born 15th of December 1982
- Computer Science Interests: programming language design,
  compilers, virtual machines and distributed systems.
- Keywords: Common Lisp, Blockchain, Go, Forth, Erlang, C,
  С++, Tkl/Tk, Assembler x86, Assembler AVR | Nginx,
  RabbitMQ, PostgreSQL

|         <r> |                                             |
|       Blog: | http://rigidus.ru                           |
|      Email: | [[mailto:xxx@gmail.com][avenger-f@yandex.ru, i.am.rigidus@gmail.com]] |
|     Github: | https://github.com/rigidus                  |

* *Solution Architect* at *Insolar* [Jan 2020 - Jan 2021]

Enterprise blockchain startup
(https://insolar.io). Technology stack: Go + React

Insolar's architecture is complex, I needed to make sure I
understood all aspects.

[1] To visualize the algorithm of the Node's work, I wrote a
translator from the Go code to the State Diagram for
PlantUML. This state machine processed messages from other
nodes. I have applied my experience in building compilers.

As a result:
- Some bugs were found,
- The documentation has become easier to keep up to date,
- Accelerated architectural design: it was easier to reflect
  the changes on the diagram,
- I made sure that I understand architecture correctly.

[2] I have done architectural design for the Observer
component. It is a service that collects data from the
blockchain network, aggregates it and provides it to web
frontends. Frontends show our users transactions, account
balances, and contract states.

[3] For a startup, a patent portfolio is important - it
affects the price of the possible sale of the company and
the receipt of financing. I have patented architecture with
a US patent attorney and have filed several patents:
- US 62/966, 610 System and method for managing the
  execution of domain smart contracts in Distributed
  Ledger Technology networks
- US 62/901, 388 Multi-purpose node model to provide
  scalability in the blockchain application network.
- US 62/937, 881 Systems and methods of extensible smart
  contracts in Distributed Ledger Technology
- US 62/878, 833 System and method of extensible
  cryptography in a Distributed Ledger
- US 62/924, 245 Systems and methods for achieving
  consensus in a Decentralized Network
- 040279.00001 Certified Record Book

* *Independent Research* [Apr 2019 - Dec 2019]

Independently designed and implemented my own blockchain
system in Forth and Common Lisp aimed at Internet Of Things

* *Blockchain researcher* at *Waves* [Sep 2018 — Dec 2019]

Waves (https://waves.tech/) is an open blockchain protocol
and development toolset for Web 3.0 applications and
decentralized solutions.

The company is the largest developer of blockchain solutions
in Russia

The blockchain is written in Scala, the frontends are ModX,
React, React Native.

Achievements:
- Developed a decompiler for Ride, the smart contract language
  on the Waves blockchain. It finds compilation patterns
  from bytecode and restores lost semantic constructs.
- I researched the possibilities of implementing NFT tokens
  and Curated List Registries on Waves blockchain.
- I wrote a number of tests and documentation, you can see
  my contribution on the github, because Waves is a
  completely open source project (in Scala).

* *System Architect* at *Enecuum* [Mar 2017 - Sep 2018]

A startup in the post-ICO stage (https://enecuum.com/), is
developing a blockchain project. Technology stack: Java,
C++, Web, Mobile

I was hired for as System Architect, for can implement the
Virtual Machine for execution smart contract for
decentralized network nodes.

In practice, I had to deal with architecture design, hiring
and training team developers, setting and monitoring the
execution of tasks and many other things besides working
with code - this is, in general, normal for startups.

I divided the efforts of the developers by creating four
departments:
- Node developers
- Block explorer developers
- Mobile application developers
- Web developers

Each department had 6-8 people and 2-3 testers, about 40
people in total. I implemented scrum and wrote several
utilities (in Emacs-Lisp) that track the progress of tasks
and signal when they are behind schedule. For each
department, I made a Gantt chart.

As a result, the project was completed on time. We finished
three days before the presentation in Hong Kong.

Solution characteristics:
- Scalable system of interacting nodes in a distributed
  network (about 400 nodes)
- Constant traffic at the level of 500-1000 transactions per
  day on the test network
- Smart contacts execution system
- Compiler from JS-like language to Forth-like bytecode
- Trained team leaders in each department

By agreement with the CEO and CTO, after the launch of
TestNet, I developed the Virtual Machine for executing smart
contracts.

Achievements:
- Launched the Test Network
- Developed a virtual machine that executes smart contracts
- Made a compiler from JS-like high-level language into
  VM-bytecode.

* *TeamLead* at *Automaton* [Dec 2015 - Mar 2017]

The company is engaged in the development and operation of
automated parking lots.

I led a research project to develop a new hardware and
software parking system.

Technologies:
- PCB Design - Kikad, Altium Designer
- Programming: C/С++, Assembler, Erlang (telephony), PHP/JS:
  Symfony + React (web interface), EmacsLisp - code
  generation for "executable specifications" and utilities
  for collaborative remote work in a team
- Architectural stack - Linux on ARM Cortex A8 and
  Symphony + React in the control interface.

The development was carried out from scratch, in stages:
- Hiring employees
- Selection of electronic components,
- Creation of printed circuit boards,
- Writing low-level code that controls barriers and polls
  sensors
- Writing business logic and web interfaces through which
  parking can be controlled remotely,
- Internet telephony connection to communicate with the
  parking client

In total, 50-60 people worked on the project (excluding the
commercial department, which found clients and concluded
contracts):

The first implementation took place six months after the
start of development, the development fully paid off in a
year. The developed solution is ahead of the competitors.
- 2 design engineers (topologists) for the design of printed
  circuit boards
- 1 Linux kernel driver developer
- 3 full stack web developers (PHP Symphony React)
- 2 android developers
- 1 ios developer
- 4 QA specialists
- 10-20 implementation engineers, installers, electricians
  (at the implementation stage)
- 1 3D modeler
- 1 Erlang developer (telephony)
- 10-15 pickers-pickers of the parent company (they assembled according to design documentation)
- 1 TeamLead, he is also the technical project manager (it
  was me)

My achievements:

- Designed the hardware and software architecture of the
  paid parking automation system.
- Planned and organized software and hardware development
  work, including selection of electronic components and
  circuit design.
- Implemented business logic and presentation layer
  (Operator Workplace) on Symfony and React
- Supervised the implementation of the transport layer and
  the hardware abstraction layer (C/C++, kernel modules,
  device drivers)
- Organized parallel development on a modular basis to speed
  up product creation and kanban methodology
- Implemented Continuous Integration and Lifecycle
  Management Process (Releases, Bug Fixes, Feature
  Additions, Technical Quality Control, Automated Testing)
- Implemented secure (digital signature) and fail-safe
  (rollback to the previous version if tests fail) firmware
  update via the Internet.
- Automated documentation generation and storage using GIT
  based versioning and "executable specifications".

* *TeamLead* at *BKN* [Apr 2015 - Dec 2015]

The company is the second local real estate website after
the Real Estate Bulletin (https://bn.ru). Receives income
from advertising on the site and ads from the sale of real
estate.

Supervised the development and promotion of information
technology for real estate agencies (b2b and b2c).

Technology stack: C # and ASP.NET, ExtJs, 3 people were
involved in development.

The site showed a decline in ad revenue for the six months
before I joined the company. It was necessary to increase
the resource in the subject and interest advertisers.

Achievements:

- Using the data of real estate agencies, I created a
  section on residential complexes and new buildings, which
  soon reached 60% of the site in volume, which allows you
  to dramatically increase advertising revenues on.
- Implemented on the site a section for the search and
  selection of apartments, rooms and residential buildings
  of the primary and secondary market, integrated it with
  the inter-agency database of real estate objects.
- Formed an SEO strategy for website development.

After the completion of the work, advertising revenue and
traffic began to show steady growth.


* *TeamLead* at *Trend* [Feb 2014 - Mar 2015]

The company (https://trendrealty.ru) is a young fast-growing
real estate agency specializing in the primary market (new
buildings). Technology stack: Php, Nginx, Mysql, PostgreSql

Prior to my arrival, real estate agents used skype and
google docs to synchronize information with each other and
receive data from developers. Given the rapid growth, this
was becoming a bottleneck.

Achievements:

Automated the business process of a real estate sales agency
(new buildings):
- Made an internal portal with a personal account of a
  realtor and the functionality of booking apartments
- Implemented automated setting of recommended prices and
  automatic selection of an object according to the criteria
  entered by the realtor


* *Lisp|Erlang Developer* at *Algorithmic Trading Company* [Apr 2012 - Feb 2014]

I have developed solutions in the field of electronic
currencies based on BlockChain technology. (https://aintsys.com)

Technology stack: Erlang, Common Lisp, C ++

Unfortunately, under the terms of the NDA, I have no right
to disseminate information about the activities of the
company and my developments on the network :(

* *Senior Developer* at *WizardSoft* [May 2011 - Apr 2012]

The company (https://wizardsoft.ru) is engaged in the
automation of cost management in construction.

Achievements:

Developed a high-load portal for construction tenders. The
prototype was implemented in Common Lisp, Postmodern and
PostgreSQL. After acceptance, the prototype was
significantly extended and rewritten in PHP

* *Middle developer* at *TsiFri* [Sep 2009 - Apr 2011]

The company (http://320-8080.ru) is an online store of
digital technology.

Technology stack: PHP, MySql, Jquery, Common Lisp, Memcached

Achievements:

- At the first stage, in the shortest possible time, I
  prepared the legacy code for the New Year loads by
  introducing caching.
- Then I completely redesigned and implemented it for a
  high-load online store.

* *Junior Web Developer* at *Webdom* [Jan 2007 - Sep 2009]

Web Studio (https://webdom.net)

Technology stack: Php, Nginx, MySql

Achievements:

- Developed the framework on which the company now
  operates. CMS based on it are delivered to clients.

* *Freelance programmer* at *Pochin* [Sep 2005 - Jan 2007]

The company (http://pochin.ru) is an online store of car
covers, auto parts and auto tools.

Technology stack: Linux, Apache, MySQL, PHP

Initially started as a freelance programmer, but soon the
collaboration became permanent.

Achievements:

- Designed and developed an online store (three versions in
  a year and a half)
